pipeline {
    agent {
        kubernetes {
yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:3283.v92c105e0f819-8
    workingDir: /home/jenkins/agent
    volumeMounts:
    - mountPath: /home/jenkins/agent
      name: workspace-volume

  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    command:
    - /busybox/sh
    args:
    - -c
    - cat  # dummy entrypoint, 실제 실행은 Pipeline에서 함
    tty: true
    volumeMounts:
    - mountPath: /kaniko/.docker
      name: harbor-creds
    - mountPath: /workspace
      name: workspace-volume

  volumes:
  - name: workspace-volume
    emptyDir: {}
  - name: harbor-creds
    secret:
      secretName: harbor-creds
"""
            defaultContainer 'kaniko'
        }
    }

    environment {
        IMAGE_NAME = "harbor.locall:30004/jentest/nginx"
        IMAGE_TAG = "${BUILD_NUMBER}"
        FULL_IMAGE = "${IMAGE_NAME}:${IMAGE_TAG}"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-token', url: 'https://github.com/hwseo0406/hwseo_site.git', branch: 'main'
            }
        }

        stage('Build & Push with Kaniko') {
            steps {
                sh '''
                /kaniko/executor \
                  --context `pwd` \
                  --dockerfile `pwd`/Dockerfile \
                  --destination=${FULL_IMAGE} \
                  --insecure \
                  --skip-tls-verify
                '''
            }
        }

        stage('Update Manifest') {
            steps {
                sh """
                sed -i 's|image: .*|image: ${FULL_IMAGE}|' jentest-deployment.yaml
                cat jentest-deployment.yaml
                """
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'k8s-config']) {
                    sh 'kubectl apply -f jentest-deployment.yaml'
                }
            }
        }
    }

    post {
        success {
            echo "✅ 배포 성공: ${FULL_IMAGE}"
        }
        failure {
            echo "❌ 실패. 로그를 확인하세요."
        }
    }
}
